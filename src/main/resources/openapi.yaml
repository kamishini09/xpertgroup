swagger: "2.0"
info:
  description: "Documentacion API Cliente para la prueba Elektra"
  version: "1.0.0"
  title: "Documentacion API"
schemes:
  - "http"

paths:
  /api/customer/save:
    post:
      tags:
        - "Customer"
      summary: "Agregar un cliente"
      description: "Endpoint que sirve para agregar un cliente y tiene como respuesta el ID del cliente que guarda"
      consumes:
        - "application/json"

      parameters:
        - in: "body"
          name: "body"
          description: "Objeto que recibe como body"
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        "200":
          description: OK
          schema:
            type: "integer"
            format: "int64"
            example: 1
        "400":
          description: ""
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "El Sexo debe ser M o F"
        "409":
          description: ""
          schema:
            $ref: "#/definitions/MensajeEstadarUsuario"



  /api/customer/search/{Id}:
    get:
      tags:
        - "Customer"
      summary: "Buscar cliente por ID"
      description: "Retorna el cliente o un mensaje de no encontrado"
      produces:
        - "application/json"
      parameters:
        - name: "Id"
          in: "path"
          description: "ID del cliente"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UsuarioResponse"

        "409":
          description: ""
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "El identificador: 22 no esta en la base de datos"




definitions:
  Customer:
    type: "object"
    required:
      - "name"
      - "apellido_paterno"
      - "apellido_materno"
      - "telefono"
    properties:
      nombre:
        type: "string"
        example: "alberto"
      apellido_paterno:
        type: "string"
        example: "Aldo"
      apellido_materno:
        type: "string"
        example: "Rojas"
      sexo:
        type: "string"
        example: "M"
      correo:
        type: "string"
        example: "prueba@gmail.com"
      telefono:
        type: "integer"
        format: "int64"
        example: 22345678
      fecha_nacimiento:
        type: "string"
        example: "1992-05-09"
  MensajeEstadarUsuario:
    type: "object"
    properties:
      message:
        type: "string"
        example: "El cliente: alberto aldo rojas, ya esta registrado."

  UsuarioResponse:
    type: "object"
    required:
      - "name"
      - "apellido_paterno"
      - "apellido_materno"
      - "telefono"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      nombre:
        type: "string"
        example: "alberto"
      apellido_paterno:
        type: "string"
        example: "Aldo"
      apellido_materno:
        type: "string"
        example: "Rojas"
      sexo:
        type: "string"
        example: "M"
      correo:
        type: "string"
        example: "prueba@gmail.com"
      telefono:
        type: "integer"
        format: "int64"
        example: 22345678
      fecha_nacimiento:
        type: "string"
        example: "1992-05-09T00:00:00.000+00:00"

